#!/bin/zsh

round_corners() {
    local img="$1"
    local radius_percent="$2"  # Radius as a percentage of min(width, height)
    local output="$3"

    # Ensure all arguments are provided
    if [[ -z "$img" || -z "$radius_percent" || -z "$output" ]]; then
        echo "Usage: $0 input_image radius_percentage output_image"
        return 1
    fi

    # Get image dimensions
    local width height min_dim
    width=$(magick identify -format "%w" "$img")
    height=$(magick identify -format "%h" "$img")
    
    if [[ -z "$width" || -z "$height" ]]; then
        echo "Error: Unable to get image dimensions for '$img'."
        return 1
    fi

    # Determine the smaller dimension
    min_dim=$(( width < height ? width : height ))

    # Calculate radius: (radius_percent / 100) * min_dim / 2
    local radius
    radius=$(awk "BEGIN { printf \"%.0f\", ($radius_percent / 100) * $min_dim / 2 }")

    # Apply rounded corners
    magick "$img" \
        \( -size "${width}x${height}" xc:none -fill white \
        -draw "roundrectangle 0,0 $width,$height $radius,$radius" \) \
        -alpha set -compose DstIn -composite "$output"
}

round_corners "$@"

