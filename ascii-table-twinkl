#!/Users/lynn/venv/bin/python

from tabulate import tabulate

# New headers for the table
headers = ['Description', 'Hours Worked', 'Subtotal Due (USD)']

# Hourly fee
hourly_fee = 27.00

# Function to collect user input
def collect_rows(num_rows):
    rows = []
    total_amount = 0.0  # Ensure total_amount is a float
    for i in range(num_rows):
        while True:
            print(f"\nLINE-ITEM {i + 1}:")
            descr = input("Description: ")
            try:
                hours_worked = float(input("Hours Worked: "))
            except ValueError:
                print("Invalid number of hours. Please enter a valid number.")
                continue
            
            # Calculate subtotal due
            subtotal_due = hours_worked * hourly_fee
            
            # Create the row as a list of float values
            row = [descr, f"{hours_worked:.2f}", subtotal_due]  # Subtotal due as float
            row_string = ' '.join(str(cell) for cell in row)
            if len(row_string) > 79:
                print("Warning: This row contains more than 79 characters! Please enter the information again.")
            else:
                rows.append(row)
                total_amount += subtotal_due
                break  # Exit the loop if the row is valid

    return rows, total_amount

# Main function
def main():
    try:
        num_rows = int(input("How many line-items would you like to add? "))
    except ValueError:
        print("Please enter a valid number!")
        return
    
    # Collect the data for the specified number of rows
    rows, total_amount = collect_rows(num_rows)

    # Display the main table (without the TOTAL row)
    table = tabulate(rows, headers=headers, tablefmt="grid", floatfmt=".2f")  # Format floats to 2 decimal places
    print(table)

    footer = tabulate([['TOTAL', f"${total_amount:.2f}"]], tablefmt="grid")
    print("\n" + footer)



if __name__ == "__main__":
    main()
